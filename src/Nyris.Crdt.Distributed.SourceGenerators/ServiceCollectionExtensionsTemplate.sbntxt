using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Routing;
using Microsoft.Extensions.DependencyInjection;
using Nyris.Crdt.Distributed.Extensions;
using ProtoBuf.Grpc.Server;

namespace Nyris.Crdt.Distributed
{
    internal static class ServiceCollectionExtensions
    {
        public static ManagedCrdtsServicesBuilder AddManagedCrdts<TContext>(this IServiceCollection services)
            where TContext : ManagedCrdtContext
        {
            ProtoBuf.Meta.RuntimeTypeModel.Default.IncludeDateTimeKind = true;
            services.AddCodeFirstGrpc(options =>
            {
                options.EnableDetailedErrors = true;
            });

            services.AddInternals<IManagedCrdtService>();

            services.AddSingleton<TContext>();
            services.AddSingleton<ManagedCrdtContext, TContext>(sp => sp.GetRequiredService<TContext>());

{{~ for type in DtoInfos ~}}
    {{~ for crdtInfo in type.CrdtInfos ~}}
            services.AddConnectionServices<{{ crdtInfo.AllArgumentsString }}>();
    {{~ end ~}}
{{~ end ~}}

            return new ManagedCrdtsServicesBuilder(services);
        }

        public static IEndpointRouteBuilder MapManagedCrdtService(this IEndpointRouteBuilder endpoints)
        {
            endpoints.MapGrpcService<ManagedCrdtService>();
            return endpoints;
        }
    }
}