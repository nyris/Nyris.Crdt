variables:
  DEPLOYMENT_NAME: sample-app
  GCP_IMAGE_NAME: eu.gcr.io/everybag-1273/nyris-distributed-prototype-sample-app
  GCP_BRANCH_IMAGE: $GCP_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  GCP_LATEST_IMAGE: $GCP_IMAGE_NAME:latest

stages:
  - version
  - build
  - docker:build
  - docker:push
  - deploy

.base:
  image: eu.gcr.io/everybag-1273/dotnet/sdk-ci:5.0
  allow_failure: false
  tags:
    - builder
    - integration

Version:
  extends: .base
  stage: version
  image: eu.gcr.io/everybag-1273/gitversion
  needs: []
  variables:
    GIT_DEPTH: 0
  artifacts:
    reports:
      dotenv: version.env
  script:
    - gitversion-env > version.env

.build:
  extends: .base
  stage: build
  needs: []
  variables:
    GIT_DEPTH: 0
  tags:
    - builder
    - integration
  artifacts:
    expire_in: 1 week
    paths:
      - publish/

Build:
  extends: .build
  script:
    - v2-autobuild
    - v3-publish-app Release alpine-x64 samples/Nyris.Crdt.AspNetExample/Nyris.Crdt.AspNetExample.csproj

.dockerize:
  stage: docker:build
  needs:
    - job: Build
      artifacts: true
    - job: Version
      artifacts: true
  variables:
    GIT_DEPTH: 1
  tags:
    - docker
    - integration
  before_script:
    - docker pull $GCP_IMAGE_NAME:main || true
    - docker pull $GCP_IMAGE_NAME:master || true
    - docker pull $GCP_IMAGE_NAME:latest || true

Dockerize:
  extends: .dockerize
  script:
    - echo "Building $GCP_BRANCH_IMAGE ..."
    - docker build
      --pull
      --label org.label-schema.name="Nyris.Crdt.AspNetExample"
      --label org.label-schema.description="An ASP.NET Core example for Nyris.Crdt.Distributed"
      --label org.label-schema.vendor="nyris GmbH"
      --label org.label-schema.build-date="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
      --label org.label-schema.version="$GIT_INFORMATIONAL_VERSION"
      --label org.label-schema.vcs-url="$CI_PROJECT_URL"
      --label org.label-schema.vcs-ref="$CI_COMMIT_SHA"
      --label org.label-schema.schema-version="1.0"
      --tag $GCP_BRANCH_IMAGE
      -f Dockerfile
      .
    - docker push $GCP_BRANCH_IMAGE

.push:
  stage: docker:push
  variables:
    GIT_STRATEGY: none
  needs:
    - job: Dockerize
  tags:
    - docker
    - integration
  before_script:
    - docker pull $GCP_BRANCH_IMAGE

Push latest:
  extends: .push
  only:
    # Only "main" (ex "master") should be tagged "latest"
    - master
    - main
  script:
    - docker tag $GCP_BRANCH_IMAGE $GCP_LATEST_IMAGE
    - docker push $GCP_LATEST_IMAGE

Push tag:
  extends: .push
  only:
    - tags
  script:
    - docker tag $GCP_BRANCH_IMAGE $GCP_IMAGE_NAME:$CI_COMMIT_REF_NAME
    - docker push $GCP_IMAGE_NAME:$CI_COMMIT_REF_NAME

.deploy:
  extends: .base
  stage: deploy
  when: manual
  allow_failure: true
  variables:
    GIT_DEPTH: 1
  needs:
    - job: Dockerize
    - job: Version
      artifacts: true
  tags:
    - deployer
  before_script:
    - find kubernetes -type f -exec sed -i "s?{{ ASPNETCORE_ENVIRONMENT }}?$ASPNETCORE_ENVIRONMENT?g" {} \;
    - find kubernetes -type f -exec sed -i "s?{{ VERSION }}?$GIT_SEMANTIC_VERSION?g" {} \;
  after_script:
    - wait-for-deployment -n distributed-prototype-test $DEPLOYMENT_NAME 300

integration:
  extends: .deploy
  variables:
    ASPNETCORE_ENVIRONMENT: Development
  tags:
    - deployer
    - integration
  environment:
    name: integration
  script:
    - apply-deployment $GCP_BRANCH_IMAGE $CI_COMMIT_SHA kubernetes/sample
